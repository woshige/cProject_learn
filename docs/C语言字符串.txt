C字符串实际上是使用null字符'\0'终止的一维字符数组，例如：

       char greeting[6] = {'H', 'e', 'l', 'l', 'o', '\0'};
       例子：
            #include <stdio.h>

			int main() {
			    char greeting[6] = {'h','e','l','l','o','\0'};
			    printf("Greeting message: %s\n",greeting);
			    return 0;
			}
		C中操作字符的函数
		   strcpy(s1,s2);  复制字符串s2到字符串s1
		   strcat(s1,s2);  连接字符串s2到字符串s1的末尾
		   strlen(s1);     返回字符串s1的长度
		   strcmp(s1,s2);  如果s1和s2是相同的，则返回0；如果s1 < s2则返回的结果小于0，如果s1 > s2，则返回的值大于0
		   strchr(s1,ch);  返回一个指针，指向字符串s1中字符串ch第一次出现的位置
		   strstr(s1,s2);  返回一个指针，指向字符串s1和字符串s2第一次出现的位置
		举例：
		    #include <stdio.h>
			#include <string.h>

			int main() {
			    char greeting[6] = {'h', 'e', 'l', 'l', 'o', '\0'};
			    printf("Greeting message: %s\n", greeting);
			    char str1[12] = "hello";
			    char str2[12] = "world";
			    char str3[12];
			    int len;
			    /* 复制str1到str3 */
			    strcpy(str3,str1);
			    printf("str3的值为：%s\n",str3);
			    /* 连接str1和str2 */
			    strcat(str1,str2);
			    printf("连接之后str2的值为：%s\n",str1);
			    /* 连接后，str1的长度 返回的值为该字符串的长度，遇到\0就停止，但是不会将\0计算在内 */
			    len = (int) strlen(str1);
			    printf("str1的长度为：%d\n",len);
			    /*size返回的是指针所占用的地址空间的大小*/
			    len = (int) sizeof(str1);
			    printf("str1的长度为：%d\n",len);
			    return 0;
			}
