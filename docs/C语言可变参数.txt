对于这样的场景，例如希望函数带有可变数量的参数，而不是预定义数量的参数，C语言为这种情况提供了解决方案。
    例如：
       int func(int,...){
       ....
       }
       int main(){
           func(2,2,3);
           func(3,2,3,4);
       }
    实例：
        #include <stdio.h>
		#include <stdarg.h>

		double average(int num, ...);

		int main() {
		    printf("Hello, World!\n");
		    printf("average of 2,3,4,5 = %f\n",average(4,2,3,4,5));
		    printf("average of 5,10,15 = %f\n",average(3,5,10,15));
		    return 0;
		}

		double average(int num, ...) {
		    va_list vaList;
		    double sum = 0.0;
		    int i;
		    /*为num个参数初始化 valist*/
		    va_start(vaList, num);
		    /*访问所有赋给valist的参数 */
		    for (i = 0; i < num; i++) {
		        sum += va_arg(vaList, int);
		    }
		    va_end(vaList);
		    return sum / num;
		}

    访问下个参数：
       void debug_arg(unsigned int num, ...) {
		    va_list vaList;
		    int i,res = 0;
		    va_start(vaList,num);
		    for(i = 0; i < num;i++){
		        res = va_arg(vaList, int);
		        printf("res:%d,*vaList:%d\n",res,*vaList);
		    }
		    va_end(vaList);
		}